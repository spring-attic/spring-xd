<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
	   xmlns:int="http://www.springframework.org/schema/integration"
	   xsi:schemaLocation="http://www.springframework.org/schema/integration https://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/kafka https://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd">

	<int:channel id="output"/>

	<int-kafka:zookeeper-connect id="kafkaSourceZookeeperConnect" zk-connect="${zkconnect}"
								 zk-connection-timeout="${zkconnectionTimeout}"
								 zk-session-timeout="${zksessionTimeout}"
								 zk-sync-time="${zksyncTime}"/>

	<bean id="kafkaConfiguration" class="org.springframework.integration.kafka.core.ZookeeperConfiguration">
		<constructor-arg index="0" ref="kafkaSourceZookeeperConnect"/>
		<property name="minBytes" value="${fetchMinBytes}"/>
		<property name="maxWait" value="${fetchMaxWait}"/>
		<property name="bufferSize" value="${socketBufferBytes}"/>
		<property name="socketTimeout" value="${socketTimeout}"/>
	</bean>

	<bean id="connectionFactory" class="org.springframework.integration.kafka.core.DefaultConnectionFactory">
		<constructor-arg index="0" ref="kafkaConfiguration"/>
	</bean>


	<bean id="partitions" class="org.springframework.integration.x.kafka.KafkaPartitionAllocator">
		<constructor-arg index="0" ref="connectionFactory"/>
		<constructor-arg index="1" value="${xd.module.name}"/>
		<constructor-arg index="2" value="${xd.stream.name}"/>
		<constructor-arg index="3" value="${topics}"/>
		<constructor-arg index="4" value="${partitions}"/>
		<constructor-arg index="5" value="${xd.module.sequence}"/>
		<constructor-arg index="6" value="${xd.module.count}"/>
	</bean>

	<bean id="initialOffsetsMap" class="org.springframework.integration.x.kafka.InitialOffsetsFactoryBean">
		<constructor-arg index="0" value="${topics}"/>
		<constructor-arg index="1" value="${initialOffsets}"/>
	</bean>

	<bean id="kafkaMessageListenerContainer"
		  class="org.springframework.integration.kafka.listener.KafkaMessageListenerContainer">
		<constructor-arg index="0" ref="connectionFactory"/>
		<constructor-arg index="1" ref="partitions"/>
		<property name="maxFetch" value="${fetchMaxBytes}"/>
		<property name="offsetManager">
			<bean class="org.springframework.integration.x.kafka.WindowingOffsetManager">
				<constructor-arg ref="offsetManager"/>
				<property name="timespan" value="${offsetUpdateTimeWindow}"/>
				<property name="count" value="${offsetUpdateCount}"/>
				<property name="shutdownTimeout" value="${offsetUpdateShutdownTimeout}" />
			</bean>
		</property>
		<property name="concurrency" value="${streams}"/>
		<property name="queueSize" value="${queueSize}"/>
	</bean>

	<bean id="stringDecoder" class="kafka.serializer.DefaultDecoder">
		<constructor-arg index="0" value="#{null}"/>
	</bean>

	<bean id="kafkaInboundChannelAdapter"
		  class="org.springframework.integration.kafka.inbound.KafkaMessageDrivenChannelAdapter">
		<constructor-arg index="0" ref="kafkaMessageListenerContainer"/>
		<property name="outputChannel" ref="output"/>
		<property name="keyDecoder" ref="stringDecoder"/>
		<property name="payloadDecoder" ref="stringDecoder"/>
		<property name="autoStartup" value="false"/>
	</bean>


	<beans profile="inmemory-offset-manager,redis-offset-manager">
		<!-- enriches the behaviour of the MetadataStore, adding a distinct namespace to the keys -->
		<bean id="namespaceMetadataStore"
			  class="org.springframework.integration.x.kafka.NamespaceDelegatingMetadataStore">
			<constructor-arg index="0" ref="metadataStore"/>
			<constructor-arg index="1" value="xd:${xd.stream.name}:${xd.module.name}"/>
		</bean>

		<bean id="offsetManager" class="org.springframework.integration.kafka.listener.MetadataStoreOffsetManager">
			<constructor-arg index="0" ref="connectionFactory"/>
			<constructor-arg index="1" ref="initialOffsetsMap"/>
			<property name="consumerId" value="${groupId}"/>
			<property name="metadataStore" ref="namespaceMetadataStore"/>
			<property name="referenceTimestamp" value="${autoOffsetResetValue}"/>
		</bean>
	</beans>

	<beans profile="inmemory-offset-manager">

		<bean id="metadataStore" class="org.springframework.integration.metadata.SimpleMetadataStore"/>

	</beans>

	<beans profile="redis-offset-manager">

		<bean id="redisConnectionFactory"
			  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
			<property name="hostName" value="${spring.redis.host}"/>
			<property name="port" value="${spring.redis.port}"/>
			<property name="password" value="${spring.redis.password:#{null}}"/>
		</bean>

		<bean id="metadataStore" class="org.springframework.integration.redis.metadata.RedisMetadataStore">
			<constructor-arg ref="redisConnectionFactory"/>
		</bean>

	</beans>

	<beans profile="kafka-offset-manager">
		<bean id="offsetManager" class="org.springframework.integration.kafka.listener.KafkaTopicOffsetManager">
			<constructor-arg index="0" ref="kafkaSourceZookeeperConnect"/>
			<constructor-arg index="1" value="${kafkaOffsetTopicName}"/>
			<constructor-arg index="2" ref="initialOffsetsMap"/>
			<property name="segmentSize" value="${kafkaOffsetTopicSegmentSize}"/>
			<property name="retentionTime" value="${kafkaOffsetTopicRetentionTime}"/>
			<property name="maxSize" value="${kafkaOffsetTopicMaxSize}"/>
			<property name="batchBytes" value="${kafkaOffsetTopicBatchBytes}"/>
			<property name="maxQueueBufferingTime" value="${kafkaOffsetTopicBatchTime}"/>
			<property name="requiredAcks" value="${kafkaOffsetTopicRequiredAcks}"/>
			<property name="consumerId" value="${groupId}"/>
			<property name="referenceTimestamp" value="${autoOffsetResetValue}"/>
		</bean>
	</beans>

	<beans profile="kafkaNative-offset-manager">
		<bean id="offsetManager" class="org.springframework.integration.kafka.listener.KafkaNativeOffsetManager">
			<constructor-arg index="0" ref="connectionFactory"/>
 			<constructor-arg index="1" ref="kafkaSourceZookeeperConnect"/>
			<constructor-arg index="2" ref="initialOffsetsMap"/>
			<property name="consumerId" value="${groupId}"/>
			<property name="referenceTimestamp" value="${autoOffsetResetValue}"/>
		</bean>
	</beans>

</beans>
