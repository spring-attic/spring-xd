<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:hdp="http://www.springframework.org/schema/hadoop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/hadoop https://www.springframework.org/schema/hadoop/spring-hadoop.xsd
		http://www.springframework.org/schema/batch https://www.springframework.org/schema/batch/spring-batch.xsd">

	<batch:job id="job" restartable="${restartable}">
		<batch:step id="fileHdfsStep">
			<batch:tasklet>
				<batch:chunk reader="itemReader" writer="itemWriter" commit-interval="${commitInterval}"/>
				<batch:listeners>
					<batch:listener ref="fileDeletionListener" />
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="fileDeletionListener" class="org.springframework.xd.dirt.plugins.job.support.listener.FileDeletionStepExecutionListener">
		<property name="deleteFiles" value="${deleteFiles}"/>
	</bean>

	<bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:///#{jobParameters['absoluteFilePath']}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="${names}"/>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.xd.tuple.batch.TupleFieldSetMapper"/>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="itemWriter" class="org.springframework.xd.batch.item.hadoop.HdfsTextItemWriter">
		<constructor-arg ref="hadoopFs"/>
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="fieldExtractor">
					<bean class="org.springframework.xd.tuple.batch.TupleFieldExtractor"/>
				</property>
			</bean>
		</property>
		<property name="baseFilename" value="${fileName}"/>
		<property name="rolloverThresholdInBytes" value="${rollover}"/>
		<property name="basePath" value="${directory}/"/>
		<property name="fileSuffix" value="${fileExtension}"/>
	</bean>

	<bean id="hadoopFs" class="org.springframework.data.hadoop.fs.FileSystemFactoryBean">
		<property name="configuration" ref="hadoopConfiguration"/>
		<property name="close" value="false"/>
	</bean>

	<context:property-placeholder location="${xd.config.home}/hadoop.properties"/>

	<hdp:configuration
		register-url-handler="false"
		properties-location="${xd.config.home}/hadoop.properties"
		security-method="${spring.hadoop.security.authMethod:}"
		user-keytab="${spring.hadoop.security.userKeytab:}"
		user-principal="${spring.hadoop.security.userPrincipal:}"
		namenode-principal="${spring.hadoop.security.namenodePrincipal:}"
		rm-manager-principal="${spring.hadoop.security.rmManagerPrincipal:}">
		fs.defaultFS=${spring.hadoop.fsUri}
	</hdp:configuration>

</beans>
