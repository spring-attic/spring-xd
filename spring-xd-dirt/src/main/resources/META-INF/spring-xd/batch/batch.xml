<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task https://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<task:scheduler id="scheduler" pool-size="10" />

	<bean id="distributedJobLocator"
		class="org.springframework.xd.dirt.plugins.job.DistributedJobLocator">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<beans profile="container">
		<bean id="containerBatchConfigurer"
			  class="org.springframework.xd.dirt.batch.RuntimeBatchConfigurer">
			<constructor-arg ref="dataSource" />
			<property name="isolationLevel" value="${spring.batch.isolationLevel:#{T(org.springframework.xd.dirt.batch.RuntimeBatchConfigurer).DEFAULT_ISOLATION_LEVEL}}" />
			<property name="clobType" value="${spring.batch.clobType:#{null}}" />
			<property name="dbType" value="${spring.batch.dbType:#{null}}" />
			<property name="maxVarCharLength" value="${spring.batch.maxVarcharLength:#{T(org.springframework.batch.core.repository.dao.AbstractJdbcBatchMetadataDao).DEFAULT_EXIT_MESSAGE_LENGTH}}" />
			<property name="tablePrefix" value="${spring.batch.tablePrefix:#{T(org.springframework.batch.core.repository.dao.AbstractJdbcBatchMetadataDao).DEFAULT_TABLE_PREFIX}}" />
			<property name="validateTransactionState" value="${spring.batch.validateTransactionState:true}" />
		</bean>
	</beans>

	<beans profile="admin">
		<import resource="classpath:/org/springframework/xd/batch/hsql-datasource.xml" />

		<bean id="adminBatchConfigurer"
			  class="org.springframework.xd.dirt.batch.RuntimeBatchConfigurer">
			<constructor-arg ref="dataSource" />
			<property name="isolationLevel" value="${spring.batch.isolationLevel:#{T(org.springframework.xd.dirt.batch.RuntimeBatchConfigurer).DEFAULT_ISOLATION_LEVEL}}" />
			<property name="clobType" value="${spring.batch.clobType:#{null}}" />
			<property name="dbType" value="${spring.batch.dbType:#{null}}" />
			<property name="maxVarCharLength" value="${spring.batch.maxVarcharLength:#{T(org.springframework.batch.core.repository.dao.AbstractJdbcBatchMetadataDao).DEFAULT_EXIT_MESSAGE_LENGTH}}" />
			<property name="tablePrefix" value="${spring.batch.tablePrefix:#{T(org.springframework.batch.core.repository.dao.AbstractJdbcBatchMetadataDao).DEFAULT_TABLE_PREFIX}}" />
			<property name="validateTransactionState" value="${spring.batch.validateTransactionState:true}" />
		</bean>

		<bean class="org.springframework.xd.dirt.plugins.job.DistributedJobService">
			<constructor-arg ref="jobInstanceDao" />
			<constructor-arg ref="xdJdbcSearchableJobExecutionDao" />
			<constructor-arg ref="stepExecutionDao" />
			<constructor-arg ref="jobRepository" />
			<constructor-arg ref="jobLauncher" />
			<constructor-arg ref="distributedJobLocator" />
			<constructor-arg>
				<bean class="org.springframework.batch.core.repository.dao.JdbcExecutionContextDao">
					<property name="jdbcTemplate" ref="jdbcTemplate" />
					<property name="serializer">
						<bean class="org.springframework.batch.core.repository.dao.XStreamExecutionContextStringSerializer" />
					</property>
				</bean>
			</constructor-arg>
		</bean>

		<bean id="jobInstanceDao"
			class="org.springframework.batch.admin.service.JdbcSearchableJobInstanceDao">
			<property name="jdbcTemplate" ref="jdbcTemplate" />
		</bean>

		<bean id="xdJdbcSearchableJobExecutionDao"
			class="org.springframework.xd.dirt.job.dao.XdJdbcSearchableJobExecutionDao">
			<property name="dataSource" ref="dataSource" />
		</bean>

		<bean id="stepExecutionDao"
			class="org.springframework.batch.admin.service.JdbcSearchableStepExecutionDao">
			<property name="dataSource" ref="dataSource" />
		</bean>

		<bean id="executionContextDao"
			class="org.springframework.batch.core.repository.dao.JdbcExecutionContextDao">
			<property name="jdbcTemplate" ref="jdbcTemplate" />
			<property name="serializer">
				<bean
					class="org.springframework.batch.core.repository.dao.XStreamExecutionContextStringSerializer" />
			</property>
		</bean>
	</beans>

</beans>
