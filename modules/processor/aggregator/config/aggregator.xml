<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/integration"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:int-redis="http://www.springframework.org/schema/integration/redis"
	xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/jdbc https://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
		http://www.springframework.org/schema/task https://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration https://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/redis https://www.springframework.org/schema/integration/redis/spring-integration-redis.xsd">

	<channel id="input" />

	<aggregator input-channel="input" output-channel="output"
		correlation-strategy-expression="${correlation}"
		release-strategy-expression="${release}" expression="${aggregation}"
		send-partial-result-on-expiry="true" expire-groups-upon-completion="true"
		message-store="messageStore">
	</aggregator>

	<beans:bean id="reaper"
		class="org.springframework.integration.store.MessageGroupStoreReaper">
		<beans:property name="messageGroupStore" ref="messageStore" />
		<beans:property name="timeout" value="${timeout}" />
	</beans:bean>

	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="reaper" method="run" fixed-rate="${timeout}" />
	</task:scheduled-tasks>

	<channel id="output" />

	<beans:beans profile="use-memory-store">
		<beans:bean id="messageStore"
			class="org.springframework.integration.store.SimpleMessageStore" />
	</beans:beans>

	<beans:beans profile="use-jdbc-store">
		<beans:bean id="messageStore"
			class="org.springframework.integration.jdbc.JdbcMessageStore"
			depends-on="dataSourceInitializer">
			<beans:constructor-arg ref="dataSource" />
		</beans:bean>

		<beans:bean id="dataSourceInitializer"
			class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
			<beans:property name="databasePopulator" ref="databasePopulator" />
			<beans:property name="dataSource" ref="dataSource" />
			<beans:property name="enabled" value="${initializeDatabase}" />
		</beans:bean>

		<beans:bean id="databasePopulator"
			class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
			<beans:property name="scripts"
				value="classpath:/org/springframework/integration/jdbc/schema-#{@dbkind}.sql" />
		</beans:bean>

		<beans:bean id="dbkind"
			class="org.springframework.xd.dirt.jdbc.util.DatabaseVendorFriendlyNameFactoryBean">
			<beans:property name="override" value="${dbkind:#{null}}" />
			<beans:property name="dataSource" ref="dataSource" />
		</beans:bean>

		<beans:bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<beans:property name="driverClass" value="${driverClassName}" />
			<beans:property name="url" value="${url}" />
			<beans:property name="username" value="${username}" />
			<beans:property name="password" value="${password}" />
		</beans:bean>
	</beans:beans>

	<beans:beans profile="use-redis-store">
		<beans:bean id="messageStore"
			class="org.springframework.integration.redis.store.RedisMessageStore">
			<beans:constructor-arg ref="redisConnectionFactory" />
		</beans:bean>

		<beans:bean id="redisConnectionFactory" lazy-init="true"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
			<beans:property name="hostName" value="${hostname}" />
			<beans:property name="port" value="${port}" />
			<beans:property name="password" value="${password}" />
		</beans:bean>
	</beans:beans>

</beans:beans>
